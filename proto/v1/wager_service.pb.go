// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/wager_service.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWagerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalWagerValue   uint32  `protobuf:"varint,1,opt,name=total_wager_value,json=totalWagerValue,proto3" json:"total_wager_value,omitempty"`
	Odds              uint32  `protobuf:"varint,2,opt,name=odds,proto3" json:"odds,omitempty"`
	SellingPercentage uint32  `protobuf:"varint,3,opt,name=selling_percentage,json=sellingPercentage,proto3" json:"selling_percentage,omitempty"`
	SellingPrice      float64 `protobuf:"fixed64,4,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
}

func (x *CreateWagerRequest) Reset() {
	*x = CreateWagerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_wager_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWagerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWagerRequest) ProtoMessage() {}

func (x *CreateWagerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_wager_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWagerRequest.ProtoReflect.Descriptor instead.
func (*CreateWagerRequest) Descriptor() ([]byte, []int) {
	return file_v1_wager_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWagerRequest) GetTotalWagerValue() uint32 {
	if x != nil {
		return x.TotalWagerValue
	}
	return 0
}

func (x *CreateWagerRequest) GetOdds() uint32 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *CreateWagerRequest) GetSellingPercentage() uint32 {
	if x != nil {
		return x.SellingPercentage
	}
	return 0
}

func (x *CreateWagerRequest) GetSellingPrice() float64 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

type CreateWagerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TotalWagerValue     uint32                 `protobuf:"varint,2,opt,name=total_wager_value,json=totalWagerValue,proto3" json:"total_wager_value,omitempty"`
	Odds                uint32                 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`
	SellingPercentage   uint32                 `protobuf:"varint,4,opt,name=selling_percentage,json=sellingPercentage,proto3" json:"selling_percentage,omitempty"`
	SellingPrice        float64                `protobuf:"fixed64,5,opt,name=selling_price,json=sellingPrice,proto3" json:"selling_price,omitempty"`
	CurrentSellingPrice float64                `protobuf:"fixed64,6,opt,name=current_selling_price,json=currentSellingPrice,proto3" json:"current_selling_price,omitempty"`
	PercentageSold      uint32                 `protobuf:"varint,7,opt,name=percentage_sold,json=percentageSold,proto3" json:"percentage_sold,omitempty"`
	AmountSold          float64                `protobuf:"fixed64,8,opt,name=amount_sold,json=amountSold,proto3" json:"amount_sold,omitempty"`
	PlacedAt            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=placed_at,json=placedAt,proto3" json:"placed_at,omitempty"`
}

func (x *CreateWagerResponse) Reset() {
	*x = CreateWagerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_wager_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWagerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWagerResponse) ProtoMessage() {}

func (x *CreateWagerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_wager_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWagerResponse.ProtoReflect.Descriptor instead.
func (*CreateWagerResponse) Descriptor() ([]byte, []int) {
	return file_v1_wager_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWagerResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateWagerResponse) GetTotalWagerValue() uint32 {
	if x != nil {
		return x.TotalWagerValue
	}
	return 0
}

func (x *CreateWagerResponse) GetOdds() uint32 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *CreateWagerResponse) GetSellingPercentage() uint32 {
	if x != nil {
		return x.SellingPercentage
	}
	return 0
}

func (x *CreateWagerResponse) GetSellingPrice() float64 {
	if x != nil {
		return x.SellingPrice
	}
	return 0
}

func (x *CreateWagerResponse) GetCurrentSellingPrice() float64 {
	if x != nil {
		return x.CurrentSellingPrice
	}
	return 0
}

func (x *CreateWagerResponse) GetPercentageSold() uint32 {
	if x != nil {
		return x.PercentageSold
	}
	return 0
}

func (x *CreateWagerResponse) GetAmountSold() float64 {
	if x != nil {
		return x.AmountSold
	}
	return 0
}

func (x *CreateWagerResponse) GetPlacedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PlacedAt
	}
	return nil
}

type ListWagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListWagersRequest) Reset() {
	*x = ListWagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_wager_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWagersRequest) ProtoMessage() {}

func (x *ListWagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_wager_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWagersRequest.ProtoReflect.Descriptor instead.
func (*ListWagersRequest) Descriptor() ([]byte, []int) {
	return file_v1_wager_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListWagersRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWagersRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_v1_wager_service_proto protoreflect.FileDescriptor

var file_v1_wager_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x31, 0x2f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x57, 0x61, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x12, 0x73,
	0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x11, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x12,
	0x09, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x57, 0x61, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6f, 0x64, 0x64, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x65,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x6c,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x6c, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x6f,
	0x6c, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x41, 0x74, 0x22, 0x46, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x32, 0xa8, 0x02, 0x0a, 0x0c, 0x57, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x92, 0x41, 0x37, 0x0a, 0x06, 0x57, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x77, 0x61, 0x67,
	0x65, 0x72, 0x1a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x77, 0x61, 0x67,
	0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x3a, 0x01, 0x2a, 0x22, 0x07, 0x2f, 0x77, 0x61, 0x67,
	0x65, 0x72, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x92, 0x41, 0x35, 0x0a, 0x06, 0x57, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x77, 0x61, 0x67, 0x65, 0x72, 0x73, 0x1a,
	0x1e, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x77, 0x61, 0x67, 0x65, 0x72, 0x73,
	0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x73, 0x42, 0x39,
	0x92, 0x41, 0x0a, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x5a, 0x2a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x74, 0x64, 0x61, 0x6b,
	0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_wager_service_proto_rawDescOnce sync.Once
	file_v1_wager_service_proto_rawDescData = file_v1_wager_service_proto_rawDesc
)

func file_v1_wager_service_proto_rawDescGZIP() []byte {
	file_v1_wager_service_proto_rawDescOnce.Do(func() {
		file_v1_wager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_wager_service_proto_rawDescData)
	})
	return file_v1_wager_service_proto_rawDescData
}

var file_v1_wager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_wager_service_proto_goTypes = []interface{}{
	(*CreateWagerRequest)(nil),    // 0: v1.CreateWagerRequest
	(*CreateWagerResponse)(nil),   // 1: v1.CreateWagerResponse
	(*ListWagersRequest)(nil),     // 2: v1.ListWagersRequest
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*structpb.ListValue)(nil),    // 4: google.protobuf.ListValue
}
var file_v1_wager_service_proto_depIdxs = []int32{
	3, // 0: v1.CreateWagerResponse.placed_at:type_name -> google.protobuf.Timestamp
	0, // 1: v1.WagerService.CreateWager:input_type -> v1.CreateWagerRequest
	2, // 2: v1.WagerService.ListWagers:input_type -> v1.ListWagersRequest
	1, // 3: v1.WagerService.CreateWager:output_type -> v1.CreateWagerResponse
	4, // 4: v1.WagerService.ListWagers:output_type -> google.protobuf.ListValue
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_wager_service_proto_init() }
func file_v1_wager_service_proto_init() {
	if File_v1_wager_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_wager_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWagerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_wager_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWagerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_wager_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_wager_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_wager_service_proto_goTypes,
		DependencyIndexes: file_v1_wager_service_proto_depIdxs,
		MessageInfos:      file_v1_wager_service_proto_msgTypes,
	}.Build()
	File_v1_wager_service_proto = out.File
	file_v1_wager_service_proto_rawDesc = nil
	file_v1_wager_service_proto_goTypes = nil
	file_v1_wager_service_proto_depIdxs = nil
}
